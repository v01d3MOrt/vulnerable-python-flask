name: Code Scan

on:
  pull_request:
    branches: [ main ]

jobs:
  security_scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install Poetry
      run: curl -sSL https://install.python-poetry.org | python3 -

    - name: Install dependencies
      run: poetry install

    - name: Run Bandit security scan
      uses: mdegis/bandit-action@v1.0
      id: bandit_scan
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        path: "."
        level: high
        confidence: high
        exit_zero: true

    - name: Parse Bandit results
      run: |
        bandit_output=$(cat bandit_output.json)
        critical_issues=$(echo "$bandit_output" | jq '[.results[] | select(.issue_severity=="HIGH") | .filename] | length')
        echo "critical_issues=$critical_issues" >> $GITHUB_ENV

    - name: Block pull request if vulnerabilities are found
      if: env.critical_issues > 0
      run: |
        curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -X POST -d '{"body":"Block"}' \
        "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.number }}/comments"
        exit 1

    - name: Comment and merge pull request if no vulnerabilities are found
      if: env.critical_issues == 0
      run: |
        curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -X POST -d '{"body":"Successful"}' \
        "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.number }}/comments"
        curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -X PUT -d '{"commit_title":"Auto-merge pull request","commit_message":"This pull request has been automatically merged.","merge_method":"merge"}' \
        "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.number }}/merge"
